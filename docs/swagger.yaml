basePath: /v1
definitions:
  entity.Award:
    properties:
      name:
        default: MVP of season 2024
        type: string
      surname:
        default: Best player of season 2024
        type: string
    type: object
  entity.Game:
    properties:
      date:
        default: 12.03.24
        type: string
      first_team:
        default: LA Lakers
        type: string
      league:
        default: NBA
        type: string
      second_team:
        default: Chicago Bulls
        type: string
      type:
        default: final
        type: string
    type: object
  entity.League:
    properties:
      name:
        default: NBA
        type: string
      season:
        default: 2023/2024
        type: string
    type: object
  entity.Player:
    properties:
      age:
        default: 34
        type: integer
      citizenship:
        default: USA
        type: string
      height:
        default: 201
        type: integer
      middle_name:
        type: string
      name:
        default: Jimmi
        type: string
      role:
        default: heavy forward
        type: string
      surname:
        default: Butler
        type: string
      team:
        default: Miami Heat
        type: string
      weight:
        default: 104
        type: integer
    type: object
  v1.createAwardResp:
    properties:
      award_id:
        type: string
    type: object
  v1.createGameResp:
    properties:
      game_id:
        type: string
    type: object
  v1.createLeagueResp:
    properties:
      league_id:
        type: string
    type: object
  v1.createPlayerResp:
    properties:
      playerID:
        type: string
    type: object
  v1.errResponse:
    properties:
      error:
        example: message
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Basket no-sql lab
  title: Basket LAB
  version: "1.0"
paths:
  /award:
    post:
      consumes:
      - application/json
      description: Create new award
      operationId: create-award
      parameters:
      - description: Enter new award info
        in: body
        name: award
        required: true
        schema:
          $ref: '#/definitions/entity.Award'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.createAwardResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Create award
      tags:
      - award
  /award/{id}:
    delete:
      description: Delete award by id
      operationId: delete-award
      parameters:
      - description: Enter id award
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Delete award
      tags:
      - award
    get:
      description: Get award by id
      operationId: get-award
      parameters:
      - description: Enter award id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Award'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Get award
      tags:
      - award
    put:
      consumes:
      - application/json
      description: Update award by id
      operationId: update-award
      parameters:
      - description: Enter id award
        in: path
        name: id
        required: true
        type: string
      - description: Enter new award info for update
        in: body
        name: award
        required: true
        schema:
          $ref: '#/definitions/entity.Award'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Award'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Update award
      tags:
      - award
  /award/list:
    get:
      description: Get award list
      operationId: get-award-list
      parameters:
      - description: Enter page size
        in: query
        name: page_size
        type: string
      - description: Enter page number
        in: query
        name: page_number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Award'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Get award list
      tags:
      - award
  /game:
    post:
      consumes:
      - application/json
      description: Create new game
      operationId: create-game
      parameters:
      - description: Enter new game info
        in: body
        name: game
        required: true
        schema:
          $ref: '#/definitions/entity.Game'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.createGameResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Create game
      tags:
      - game
  /game/{id}:
    delete:
      description: Delete game by id
      operationId: delete-game
      parameters:
      - description: Enter id game
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Delete game
      tags:
      - game
    get:
      description: Get game by id
      operationId: get-game
      parameters:
      - description: Enter game id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Game'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Get game
      tags:
      - game
    put:
      consumes:
      - application/json
      description: Update game by id
      operationId: update-game
      parameters:
      - description: Enter id game
        in: path
        name: id
        required: true
        type: string
      - description: Enter new game info for update
        in: body
        name: game
        required: true
        schema:
          $ref: '#/definitions/entity.Game'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Game'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Update game
      tags:
      - game
  /game/list:
    get:
      description: Get game list
      operationId: get-game-list
      parameters:
      - description: Enter page size
        in: query
        name: page_size
        type: string
      - description: Enter page number
        in: query
        name: page_number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Game'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Get game list
      tags:
      - game
  /league:
    post:
      consumes:
      - application/json
      description: Create new league
      operationId: create-league
      parameters:
      - description: Enter new league info
        in: body
        name: league
        required: true
        schema:
          $ref: '#/definitions/entity.League'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.createLeagueResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Create league
      tags:
      - league
  /league/{id}:
    delete:
      description: Delete league by id
      operationId: delete-league
      parameters:
      - description: Enter id league
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Delete league
      tags:
      - league
    get:
      description: Get league by id
      operationId: get-league
      parameters:
      - description: Enter league id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.League'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Get league
      tags:
      - league
    put:
      consumes:
      - application/json
      description: Update league by id
      operationId: update-league
      parameters:
      - description: Enter id league
        in: path
        name: id
        required: true
        type: string
      - description: Enter new league info for update
        in: body
        name: league
        required: true
        schema:
          $ref: '#/definitions/entity.League'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.League'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Update league
      tags:
      - league
  /league/list:
    get:
      description: Get league list
      operationId: get-league-list
      parameters:
      - description: Enter page size
        in: query
        name: page_size
        type: string
      - description: Enter page number
        in: query
        name: page_number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.League'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Get league list
      tags:
      - league
  /player:
    post:
      consumes:
      - application/json
      description: Create new player
      operationId: create-player
      parameters:
      - description: Enter new player info
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/entity.Player'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.createPlayerResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Create player
      tags:
      - player
  /player/{id}:
    delete:
      description: Delete player by id
      operationId: delete-player
      parameters:
      - description: Enter id player
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Delete player
      tags:
      - player
    get:
      description: Get player by id
      operationId: get-player
      parameters:
      - description: Enter player id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Player'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Get player
      tags:
      - player
    put:
      consumes:
      - application/json
      description: Update player by id
      operationId: update-player
      parameters:
      - description: Enter id player
        in: path
        name: id
        required: true
        type: string
      - description: Enter new player info for update
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/entity.Player'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Player'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Update player
      tags:
      - player
  /player/list:
    get:
      description: Get player list
      operationId: get-player-list
      parameters:
      - description: Enter page size
        in: query
        name: page_size
        type: string
      - description: Enter page number
        in: query
        name: page_number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Player'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errResponse'
      summary: Get player list
      tags:
      - player
schemes:
- http
swagger: "2.0"
